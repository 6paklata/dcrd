[
["Format is: [scriptSig, scriptPubKey, flags, ... comments]"],
["It is evaluated as if there was a crediting coinbase transaction with two 0"],
["pushes as scriptSig, and one output of 0 atoms and given scriptPubKey,"],
["followed by a spending transaction which spends this output as only input (and"],
["correct prevout hash), using the given scriptSig. All nLockTimes are 0, all"],
["nSequences are max."],

["", "DEPTH", "P2SH",   "Test the test: we should have an empty stack after scriptSig evaluation"],
["  ", "DEPTH", "P2SH", "and multiple spaces should not change that."],
["   ", "DEPTH", "P2SH"],
["    ", "DEPTH", "P2SH"],

["", "", "P2SH"],
["", "NOP", "P2SH"],
["", "NOP DEPTH", "P2SH"],
["NOP", "", "P2SH"],
["NOP", "DEPTH", "P2SH"],
["NOP","NOP", "P2SH"],
["NOP","NOP DEPTH", "P2SH"],

["DEPTH", "", "P2SH"],

["0x4c01","0x01 NOP", "P2SH", "PUSHDATA1 with not enough bytes"],
["0x4d0200ff","0x01 NOP", "P2SH", "PUSHDATA2 with not enough bytes"],
["0x4e03000000ffff","0x01 NOP", "P2SH", "PUSHDATA4 with not enough bytes"],

["Cat related test coverage"],
["", "CAT TRUE", "P2SH", "CAT requires an input arg"],
["'ab'", "CAT TRUE", "P2SH", "CAT requires a second input arg"],
["'a' 'abcdefghijklmnop' DUP CAT DUP CAT DUP CAT DUP CAT DUP CAT DUP CAT DUP CAT", "CAT", "P2SH", "CAT must fail if the result would exceed max allowed stack item size"],

["Substring related test coverage"],
["", "SUBSTR NOT", "P2SH", "SUBSTR requires a string to operate on"],
["'abcd'", "SUBSTR NOT", "P2SH", "SUBSTR requires an end index"],
["'abcd' 2", "SUBSTR NOT", "P2SH", "SUBSTR requires a start index"],
["NOP 2 1", "SUBSTR NOT", "P2SH", "SUBSTR must only operate on byte pushes"],
["'abcd' 2 NOP", "SUBSTR NOT", "P2SH", "SUBSTR start index must be numeric"],
["'abcd' NOP 1", "SUBSTR NOT", "P2SH", "SUBSTR end index must be numeric"],
["'abcd' 2 1", "SUBSTR 'a' EQUAL", "P2SH", "SUBSTR uses 0-based indices"],
["'abcd' 2 1", "SUBSTR 'bc' EQUAL", "P2SH", "SUBSTR end index is exclusive"],
["'abcd' 1 1", "SUBSTR", "P2SH", "SUBSTR same index must produce empty byte push which is equivalent to FALSE"],
["'abcd' 1 -1", "SUBSTR NOT", "P2SH", "SUBSTR must fail with negative start index"],
["'abcd' -1 0", "SUBSTR NOT", "P2SH", "SUBSTR must fail with negative end index"],
["'abc' 4 4", "SUBSTR NOT", "P2SH", "SUBSTR must fail with start index too large"],
["'abc' 4 1", "SUBSTR NOT", "P2SH", "SUBSTR must fail with end index too large"],
["'abcd' 1 2", "SUBSTR 'b' EQUAL", "P2SH", "SUBSTR start index must be <= end index"],
["'' 4 2147483648", "SUBSTR NOT", "P2SH", "SUBSTR with empty string must fail with start index >4 bytes"],
["'' 2147483648 4", "SUBSTR NOT", "P2SH", "SUBSTR with empty string must fail with end index >4 bytes"],

["Left substring related test coverage"],
["", "LEFT NOT", "P2SH", "LEFT requires a string to operate on"],
["'abcd'", "LEFT NOT", "P2SH", "LEFT requires an index"],
["NOP 0", "LEFT NOT", "P2SH", "LEFT must only operate on byte pushes"],
["'abcd' NOP", "LEFT NOT", "P2SH", "LEFT index must be numeric"],
["'abcd' 0", "LEFT", "P2SH", "LEFT index of zero must produce empty byte push which is equivalent to FALSE"],
["'abcd' -1", "LEFT NOT", "P2SH", "LEFT must fail with negative index"],
["'abc' 4", "LEFT NOT", "P2SH", "LEFT must fail with index too large"],
["'' 2147483648", "LEFT NOT", "P2SH", "LEFT with empty string must fail with index >4 bytes"],

["Right substring related test coverage"],
["", "RIGHT NOT", "P2SH", "RIGHT requires a string to operate on"],
["'abcd'", "RIGHT NOT", "P2SH", "RIGHT requires an index"],
["NOP 0", "RIGHT NOT", "P2SH", "RIGHT must only operate on byte pushes"],
["'abcd' NOP", "RIGHT NOT", "P2SH", "RIGHT index must be numeric"],
["'abcd' 4", "RIGHT", "P2SH", "RIGHT index of same length must produce empty byte push which is equivalent to FALSE"],
["'abcd' -1", "RIGHT NOT", "P2SH", "RIGHT must fail with negative index"],
["'abc' 4", "RIGHT NOT", "P2SH", "RIGHT must fail with index too large"],
["'' 2147483648", "RIGHT NOT", "P2SH", "RIGHT with empty string must fail with index >4 bytes"],

["Right bit rotation related test coverage"],
["", "ROTR NOT", "P2SH", "ROTR requires an input value"],
["1", "ROTR TRUE", "P2SH", "ROTR requires a rotation count"],
["NOP 1", "ROTR TRUE", "P2SH", "ROTR input value must be numeric"],
["1 NOP", "ROTR TRUE", "P2SH", "ROTR rotation count must be numeric"],
["1 -1", "ROTR 2 EQUAL", "P2SH", "ROTR must fail with negative rotation count"],
["1 32", "ROTR 1 EQUAL", "P2SH", "ROTR must fail with rotation count >31"],
["2147483648 1", "ROTR 1073741824 EQUAL", "P2SH", "ROTR must fail with input value >4 bytes"],
["1 2147483648", "ROTR TRUE", "P2SH", "ROTR must fail with rotation count >4 bytes"],

["Left bit rotation related test coverage"],
["", "ROTL NOT", "P2SH", "ROTL requires an input value"],
["1", "ROTL TRUE", "P2SH", "ROTL requires a rotation count"],
["NOP 1", "ROTL NOT", "P2SH", "ROTL input value must be numeric"],
["1 NOP", "ROTL TRUE", "P2SH", "ROTL rotation count must be numeric"],
["2 -1", "ROTL 1 EQUAL", "P2SH", "ROTL must fail with negative rotation count"],
["1 32", "ROTL 1 EQUAL", "P2SH", "ROTL must fail with rotation count >31"],
["2147483648 1", "ROTL 1 EQUAL", "P2SH", "ROTL must fail with input value >4 bytes"],
["1 2147483648", "ROTL TRUE", "P2SH", "ROTL must fail with rotation count >4 bytes"],

["Division related test coverage"],
["", "DIV TRUE", "P2SH", "DIV requires a divisor"],
["3", "DIV TRUE", "P2SH", "DIV requires a dividend"],
["NOP 3", "DIV TRUE", "P2SH", "DIV dividend must be numeric"],
["6 NOP", "DIV TRUE", "P2SH", "DIV divisor must be numeric"],
["6 0", "DIV TRUE", "P2SH", "DIV must fail with zero divisor"],
["2147483648 1073741824", "DIV TRUE", "P2SH", "DIV must fail with dividend >4 bytes"],
["1 2147483648", "DIV TRUE", "P2SH", "DIV must fail with divisor >4 bytes"],

["Modular division related test coverage"],
["", "MOD TRUE", "P2SH", "MOD requires a divisor"],
["3", "MOD TRUE", "P2SH", "MOD requires a dividend"],
["NOP 3", "MOD TRUE", "P2SH", "MOD dividend must be numeric"],
["6 NOP", "MOD TRUE", "P2SH", "MOD divisor must be numeric"],
["6 0", "MOD TRUE", "P2SH", "MOD must fail with zero divisor"],
["2147483648 1073741824", "MOD TRUE", "P2SH", "MOD must fail with dividend >4 bytes"],
["1 2147483648", "MOD TRUE", "P2SH", "MOD must fail with divisor >4 bytes"],

["Left bit shift related test coverage"],
["", "LSHIFT NOT", "P2SH", "LSHIFT requires an input value"],
["1", "LSHIFT TRUE", "P2SH", "LSHIFT requires a shift count"],
["NOP 1", "LSHIFT NOT", "P2SH", "LSHIFT input value must be numeric"],
["1 NOP", "LSHIFT TRUE", "P2SH", "LSHIFT shift count must be numeric"],
["2 -1", "LSHIFT 1 EQUAL", "P2SH", "LSHIFT must fail with negative shift count"],
["1 33", "LSHIFT 0 EQUAL", "P2SH", "LSHIFT must fail with shift count >32"],
["2147483648 1", "LSHIFT TRUE", "P2SH", "LSHIFT must fail with input value >4 bytes"],
["1 2147483648", "LSHIFT TRUE", "P2SH", "LSHIFT must fail with shift count >4 bytes"],

["Right bit shift related test coverage"],
["", "RSHIFT NOT", "P2SH", "RSHIFT requires an input value"],
["1", "RSHIFT TRUE", "P2SH", "RSHIFT requires a shift count"],
["NOP 1", "RSHIFT NOT", "P2SH", "RSHIFT input value must be numeric"],
["1 NOP", "RSHIFT TRUE", "P2SH", "RSHIFT shift count must be numeric"],
["1 -1", "RSHIFT 2 EQUAL", "P2SH", "RSHIFT must fail with negative shift count"],
["1 33", "RSHIFT 0 EQUAL", "P2SH", "RSHIFT must fail with shift count >32"],
["2147483648 1", "RSHIFT TRUE", "P2SH", "RSHIFT must fail with input value >4 bytes"],
["1 2147483648", "RSHIFT TRUE", "P2SH", "RSHIFT must fail with shift count >4 bytes"],

["1", "IF 0x50 ENDIF 1", "P2SH", "0x50 is reserved"],
["0x52", "0x5f ADD 0x60 EQUAL", "P2SH", "0x51 through 0x60 push 1 through 16 onto stack"],
["0","NOP", "P2SH"],
["1", "IF VER ELSE 1 ENDIF", "P2SH", "VER non-functional"],
["0", "IF VERIF ELSE 1 ENDIF", "P2SH", "VERIF illegal everywhere"],
["0", "IF ELSE 1 ELSE VERIF ENDIF", "P2SH", "VERIF illegal everywhere"],
["0", "IF VERNOTIF ELSE 1 ENDIF", "P2SH", "VERNOTIF illegal everywhere"],
["0", "IF ELSE 1 ELSE VERNOTIF ENDIF", "P2SH", "VERNOTIF illegal everywhere"],

["1 IF", "1 ENDIF", "P2SH", "IF/ENDIF can't span scriptSig/scriptPubKey"],
["1 IF 0 ENDIF", "1 ENDIF", "P2SH"],
["1 ELSE 0 ENDIF", "1", "P2SH"],
["0 NOTIF", "123", "P2SH"],

["0", "DUP IF ENDIF", "P2SH"],
["0", "IF 1 ENDIF", "P2SH"],
["0", "DUP IF ELSE ENDIF", "P2SH"],
["0", "IF 1 ELSE ENDIF", "P2SH"],
["0", "NOTIF ELSE 1 ENDIF", "P2SH"],

["0 1", "IF IF 1 ELSE 0 ENDIF ENDIF", "P2SH"],
["0 0", "IF IF 1 ELSE 0 ENDIF ENDIF", "P2SH"],
["1 0", "IF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF", "P2SH"],
["0 1", "IF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF", "P2SH"],

["0 0", "NOTIF IF 1 ELSE 0 ENDIF ENDIF", "P2SH"],
["0 1", "NOTIF IF 1 ELSE 0 ENDIF ENDIF", "P2SH"],
["1 1", "NOTIF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF", "P2SH"],
["0 0", "NOTIF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF", "P2SH"],

["1", "IF RETURN ELSE ELSE 1 ENDIF", "P2SH", "Multiple ELSEs"],
["1", "IF 1 ELSE ELSE RETURN ENDIF", "P2SH"],

["1", "ENDIF", "P2SH", "Malformed IF/ELSE/ENDIF sequence"],
["1", "ELSE ENDIF", "P2SH"],
["1", "ENDIF ELSE", "P2SH"],
["1", "ENDIF ELSE IF", "P2SH"],
["1", "IF ELSE ENDIF ELSE", "P2SH"],
["1", "IF ELSE ENDIF ELSE ENDIF", "P2SH"],
["1", "IF ENDIF ENDIF", "P2SH"],
["1", "IF ELSE ELSE ENDIF ENDIF", "P2SH"],

["1", "RETURN", "P2SH"],
["1", "DUP IF RETURN ENDIF", "P2SH"],

["1", "RETURN 'data'", "P2SH", "canonical prunable txout format"],
["0 IF", "RETURN ENDIF 1", "P2SH", "still prunable because IF/ENDIF can't span scriptSig/scriptPubKey"],

["0", "VERIFY 1", "P2SH"],
["1", "VERIFY", "P2SH"],
["1", "VERIFY 0", "P2SH"],

["1 TOALTSTACK", "FROMALTSTACK 1", "P2SH", "alt stack not shared between sig/pubkey"],

["IFDUP", "DEPTH 0 EQUAL", "P2SH"],
["DROP", "DEPTH 0 EQUAL", "P2SH"],
["DUP", "DEPTH 0 EQUAL", "P2SH"],
["1", "DUP 1 ADD 2 EQUALVERIFY 0 EQUAL", "P2SH"],
["NOP", "NIP", "P2SH"],
["NOP", "1 NIP", "P2SH"],
["NOP", "1 0 NIP", "P2SH"],
["NOP", "OVER 1", "P2SH"],
["1", "OVER", "P2SH"],
["0 1", "OVER DEPTH 3 EQUALVERIFY", "P2SH"],
["19 20 21", "PICK 19 EQUALVERIFY DEPTH 2 EQUAL", "P2SH"],
["NOP", "0 PICK", "P2SH"],
["1", "-1 PICK", "P2SH"],
["19 20 21", "0 PICK 20 EQUALVERIFY DEPTH 3 EQUAL", "P2SH"],
["19 20 21", "1 PICK 21 EQUALVERIFY DEPTH 3 EQUAL", "P2SH"],
["19 20 21", "2 PICK 22 EQUALVERIFY DEPTH 3 EQUAL", "P2SH"],
["NOP", "0 ROLL", "P2SH"],
["1", "-1 ROLL", "P2SH"],
["19 20 21", "0 ROLL 20 EQUALVERIFY DEPTH 2 EQUAL", "P2SH"],
["19 20 21", "1 ROLL 21 EQUALVERIFY DEPTH 2 EQUAL", "P2SH"],
["19 20 21", "2 ROLL 22 EQUALVERIFY DEPTH 2 EQUAL", "P2SH"],
["NOP", "ROT 1", "P2SH"],
["NOP", "1 ROT 1", "P2SH"],
["NOP", "1 2 ROT 1", "P2SH"],
["NOP", "0 1 2 ROT", "P2SH"],
["NOP", "SWAP 1", "P2SH"],
["1", "SWAP 1", "P2SH"],
["0 1", "SWAP 1 EQUALVERIFY", "P2SH"],
["NOP", "TUCK 1", "P2SH"],
["1", "TUCK 1", "P2SH"],
["1 0", "TUCK DEPTH 3 EQUALVERIFY SWAP 2DROP", "P2SH"],
["NOP", "2DUP 1", "P2SH"],
["1", "2DUP 1", "P2SH"],
["NOP", "3DUP 1", "P2SH"],
["1", "3DUP 1", "P2SH"],
["1 2", "3DUP 1", "P2SH"],
["NOP", "2OVER 1", "P2SH"],
["1", "2 3 2OVER 1", "P2SH"],
["NOP", "2SWAP 1", "P2SH"],
["1", "2 3 2SWAP 1", "P2SH"],

["NOP", "SIZE 1", "P2SH"],

["'abc'", "IF INVERT ELSE 1 ENDIF", "P2SH", "INVERT disabled"],

["", "EQUAL NOT", "P2SH", "EQUAL must error when there are no stack items"],
["0", "EQUAL NOT", "P2SH", "EQUAL must error when there are not 2 stack items"],
["0 1","EQUAL", "P2SH"],
["1 1 ADD", "0 EQUAL", "P2SH"],
["11 1 ADD 12 SUB", "11 EQUAL", "P2SH"],

["2147483648 0 ADD", "NOP", "P2SH", "arithmetic operands must be in range [-2^31...2^31] "],
["-2147483648 0 ADD", "NOP", "P2SH", "arithmetic operands must be in range [-2^31...2^31] "],
["2147483647 DUP ADD", "4294967294 NUMEQUAL", "P2SH", "NUMEQUAL must be in numeric range"],
["'abcdef' NOT", "0 EQUAL", "P2SH", "NOT is an arithmetic operand"],

["2 2MUL", "4 EQUAL", "P2SH", "disabled"],
["2 2DIV", "1 EQUAL", "P2SH", "disabled"],

["1","NOP1 NOP2 NOP3 NOP4 NOP5 NOP6 NOP7 NOP8 NOP9 NOP10 SSTX SSGEN SSRTX 2 EQUAL", "P2SH"],
["'NOP_1_to_10' NOP1 NOP2 NOP3 NOP4 NOP5 NOP6 NOP7 NOP8 NOP9 NOP10 SSTX SSGEN SSRTX","'NOP_1_to_11' EQUAL", "P2SH"],

["Ensure 100% coverage of discouraged NOPS"],
["1", "NOP1",  "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xb0 is a discouraged NOP"],
["1", "NOP2",  "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xb1 is a discouraged NOP when CLTV is inactive"],
["1", "NOP3",  "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xb2 is a discouraged NOP when CSV is inactive"],
["1", "NOP4",  "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xb3 is a discouraged NOP"],
["1", "NOP5",  "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xb4 is a discouraged NOP"],
["1", "NOP6",  "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xb5 is a discouraged NOP"],
["1", "NOP7",  "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xb6 is a discouraged NOP"],
["1", "NOP8",  "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xb7 is a discouraged NOP"],
["1", "NOP9",  "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xb8 is a discouraged NOP"],
["1", "NOP10", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xb9 is a discouraged NOP"],
["1", "0xc0", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xc0 is a discouraged NOP when SHA256 is inactive"],
["1", "0xc1", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xc1 is a discouraged NOP"],
["1", "0xc2", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xc2 is a discouraged NOP"],
["1", "0xc3", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xc3 is a discouraged NOP"],
["1", "0xc4", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xc4 is a discouraged NOP"],
["1", "0xc5", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xc5 is a discouraged NOP"],
["1", "0xc6", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xc6 is a discouraged NOP"],
["1", "0xc7", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xc7 is a discouraged NOP"],
["1", "0xc8", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xc8 is a discouraged NOP"],
["1", "0xc9", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xc9 is a discouraged NOP"],
["1", "0xca", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xca is a discouraged NOP"],
["1", "0xcb", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xcb is a discouraged NOP"],
["1", "0xcc", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xcc is a discouraged NOP"],
["1", "0xcd", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xcd is a discouraged NOP"],
["1", "0xce", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xce is a discouraged NOP"],
["1", "0xcf", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xcf is a discouraged NOP"],
["1", "0xd0", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xd0 is a discouraged NOP"],
["1", "0xd1", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xd1 is a discouraged NOP"],
["1", "0xd2", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xd2 is a discouraged NOP"],
["1", "0xd3", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xd3 is a discouraged NOP"],
["1", "0xd4", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xd4 is a discouraged NOP"],
["1", "0xd5", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xd5 is a discouraged NOP"],
["1", "0xd6", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xd6 is a discouraged NOP"],
["1", "0xd7", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xd7 is a discouraged NOP"],
["1", "0xd8", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xd8 is a discouraged NOP"],
["1", "0xd9", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xd9 is a discouraged NOP"],
["1", "0xda", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xda is a discouraged NOP"],
["1", "0xdb", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xdb is a discouraged NOP"],
["1", "0xdc", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xdc is a discouraged NOP"],
["1", "0xdd", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xdd is a discouraged NOP"],
["1", "0xde", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xde is a discouraged NOP"],
["1", "0xdf", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xdf is a discouraged NOP"],
["1", "0xe0", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xe0 is a discouraged NOP"],
["1", "0xe1", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xe1 is a discouraged NOP"],
["1", "0xe2", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xe2 is a discouraged NOP"],
["1", "0xe3", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xe3 is a discouraged NOP"],
["1", "0xe4", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xe4 is a discouraged NOP"],
["1", "0xe5", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xe5 is a discouraged NOP"],
["1", "0xe6", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xe6 is a discouraged NOP"],
["1", "0xe7", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xe7 is a discouraged NOP"],
["1", "0xe8", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xe8 is a discouraged NOP"],
["1", "0xe9", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xe9 is a discouraged NOP"],
["1", "0xea", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xea is a discouraged NOP"],
["1", "0xeb", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xeb is a discouraged NOP"],
["1", "0xec", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xec is a discouraged NOP"],
["1", "0xed", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Opcode 0xed is a discouraged NOP"],

["NOP10", "1", "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Discouraged NOP10 in scriptSig"],

["1 0x01 0xb9", "HASH160 0x14 0xa880c3383e77efb97808a87ca378539e5f8904ef EQUAL",
 "P2SH,DISCOURAGE_UPGRADABLE_NOPS", "Discouraged NOP10 in redeemScript"],

["0x50","1", "P2SH", "Opcode 0x50 is reserved"],
["0xfa", "1", "P2SH", "Opcode 0xfa is reserved"],
["0xfb", "1", "P2SH", "Opcode 0xfb is reserved"],
["0xfc", "1", "P2SH", "Opcode 0xfc is reserved"],
["0xfd", "1", "P2SH", "Opcode 0xfd is reserved"],
["0xfe", "1", "P2SH", "Opcode 0xfe is reserved"],
["0xff", "1", "P2SH", "Opcode 0xff is reserved"],

["1 1","IF 0x50 ENDIF", "P2SH", "Opcode 0x50 is reserved in executed branch"],
["1 1","IF 0xfa ENDIF", "P2SH", "Opcode 0xfa is reserved in executed branch"],
["1 1","IF 0xfb ENDIF", "P2SH", "Opcode 0xfb is reserved in executed branch"],
["1 1","IF 0xfc ENDIF", "P2SH", "Opcode 0xfc is reserved in executed branch"],
["1 1","IF 0xfd ENDIF", "P2SH", "Opcode 0xfd is reserved in executed branch"],
["1 1","IF 0xfe ENDIF", "P2SH", "Opcode 0xfe is reserved in executed branch"],
["1 1","IF 0xff ENDIF", "P2SH", "Opcode 0xff is reserved in executed branch"],

["1 IF 1 ELSE", "0xff ENDIF", "P2SH", "invalid because scriptSig and scriptPubKey are processed separately"],

["NOP", "RIPEMD160", "P2SH"],
["NOP", "SHA1", "P2SH"],
["NOP", "SHA256", "P2SH,SHA256"],
["NOP", "BLAKE256", "P2SH"],
["NOP", "HASH160", "P2SH"],
["NOP", "HASH256", "P2SH"],

["NOP", "'b'{2049}", "P2SH", ">2048 byte push"],
["0", "IF 'b'{2049} ENDIF 1", "P2SH", ">2048 byte push in non-executed IF branch"],
["1", "0x61{256}", "P2SH", ">255 opcodes executed. 0x61 is NOP"],
["0", "IF 0x61{256} ENDIF 1", "P2SH", ">255 opcodes including non-executed IF branch. 0x61 is NOP"],
["1 2 3 4 5 0x6f{173}", "1 2 3 4 5 6 0x6f{165}", "P2SH", ">1,024 stack size (0x6f is 3DUP)"],
["1 2 3 4 5 0x6f{172}", "1 TOALTSTACK 2 TOALTSTACK 3 4 5 6 0x6f{172}", "P2SH", ">1,024 stack+altstack size"],
["NOP", "0 'a'{2048} 'b'{2048} 'b'{2048} 'b'{2048} 'b'{2048} 'b'{2048} 'b'{2048} 'b'{2024}", "P2SH", "16385-byte scriptPubKey"],

["NOP1","NOP10", "P2SH"],

["1","VER", "P2SH", "OP_VER is reserved"],
["1","VERIF", "P2SH", "OP_VERIF is reserved"],
["1","VERNOTIF", "P2SH", "OP_VERNOTIF is reserved"],
["1","RESERVED", "P2SH", "OP_RESERVED is reserved"],

["2147483648", "1ADD 1", "P2SH", "We cannot do math on 5-byte integers"],
["2147483648", "NEGATE 1", "P2SH", "We cannot do math on 5-byte integers"],
["-2147483648", "1ADD 1", "P2SH", "Because we use a sign bit, -2147483648 is also 5 bytes"],
["2147483647", "1ADD 1SUB 1", "P2SH", "We cannot do math on 5-byte integers, even if the result is 4-bytes"],
["2147483648", "1SUB 1", "P2SH", "We cannot do math on 5-byte integers, even if the result is 4-bytes"],

["2147483648 1", "BOOLOR 1", "P2SH", "We cannot do BOOLOR on 5-byte integers (but we can still do IF etc)"],
["2147483648 1", "BOOLAND 1", "P2SH", "We cannot do BOOLAND on 5-byte integers"],

["1", "1 ENDIF", "P2SH", "ENDIF without IF"],
["1", "IF 1", "P2SH", "IF without ENDIF"],
["1 IF 1", "ENDIF", "P2SH", "IFs don't carry over"],

["NOP", "IF 1 ENDIF", "P2SH", "The following tests check the if(stack.size() < N) tests in each opcode"],
["NOP", "NOTIF 1 ENDIF", "P2SH", "They are here to catch copy-and-paste errors"],
["NOP", "VERIFY 1", "P2SH", "Most of them are duplicated elsewhere,"],

["NOP", "TOALTSTACK 1", "P2SH", "but, hey, more is always better, right?"],
["1", "FROMALTSTACK", "P2SH"],
["1", "2DROP 1", "P2SH"],
["1", "2DUP", "P2SH"],
["1 1", "3DUP", "P2SH"],
["1 1 1", "2OVER", "P2SH"],
["1 1 1 1 1", "2ROT", "P2SH"],
["1 1 1", "2SWAP", "P2SH"],
["NOP", "IFDUP 1", "P2SH"],
["NOP", "DROP 1", "P2SH"],
["NOP", "DUP 1", "P2SH"],
["1", "NIP", "P2SH"],
["1", "OVER", "P2SH"],
["1 1 1 3", "PICK", "P2SH"],
["0", "PICK 1", "P2SH"],
["1 1 1 3", "ROLL", "P2SH"],
["0", "ROLL 1", "P2SH"],
["1 1", "ROT", "P2SH"],
["1", "SWAP", "P2SH"],
["1", "TUCK", "P2SH"],

["NOP", "SIZE 1", "P2SH"],

["1", "EQUAL 1", "P2SH"],
["1", "EQUALVERIFY 1", "P2SH"],

["NOP", "1ADD 1", "P2SH"],
["NOP", "1SUB 1", "P2SH"],
["NOP", "NEGATE 1", "P2SH"],
["NOP", "ABS 1", "P2SH"],
["NOP", "NOT 1", "P2SH"],
["NOP", "0NOTEQUAL 1", "P2SH"],

["1", "ADD", "P2SH"],
["1", "SUB", "P2SH"],
["1", "BOOLAND", "P2SH"],
["1", "BOOLOR", "P2SH"],
["1", "NUMEQUAL", "P2SH"],
["1", "NUMEQUALVERIFY 1", "P2SH"],
["1", "NUMNOTEQUAL", "P2SH"],
["1", "LESSTHAN", "P2SH"],
["1", "GREATERTHAN", "P2SH"],
["1", "LESSTHANOREQUAL", "P2SH"],
["1", "GREATERTHANOREQUAL", "P2SH"],
["1", "MIN", "P2SH"],
["1", "MAX", "P2SH"],
["1 1", "WITHIN", "P2SH"],

["NOP", "RIPEMD160 1", "P2SH"],
["NOP", "SHA1 1", "P2SH"],
["NOP", "SHA256 1", "P2SH,SHA256"],
["0", "SHA256", "P2SH", "Treated as NOP since it doesn't set SHA256 script flag"],
["NOP", "BLAKE256 1", "P2SH"],
["NOP", "HASH160 1", "P2SH"],
["NOP", "HASH256 1", "P2SH"],

["1", "<0 0 CHECKMULTISIG>{256}", "", "256 CHECKMULTISIG must error due to 255 op limit"],
["1", "<0 0 CHECKMULTISIGVERIFY>{256}", "", "256 CHECKMULTISIGVERIFY must error due to 255 op limit"],

["NOP 0x01 1", "HASH160 0x14 0xda1745e9b549bd0bfa1a569971c77eba30cd5a4b EQUAL", "P2SH", "Tests for Script.IsPushOnly()"],
["NOP1 0x01 1", "HASH160 0x14 0xda1745e9b549bd0bfa1a569971c77eba30cd5a4b EQUAL", "P2SH"],

["0 0x01 0x50", "HASH160 0x14 0x77c33ee1f1892b124f2c9aaed62114c23cffe2da EQUAL", "P2SH", "OP_RESERVED in P2SH should fail"],
["0 0x01 VER", "HASH160 0x14 0xe682277f7669fe986d315d52b56df3d244da11a0 EQUAL", "P2SH", "OP_VER in P2SH should fail"],

["0x00", "'00' EQUAL", "P2SH", "Basic OP_0 execution"],

["MINIMALDATA enforcement for PUSHDATAs"],

["0x4c 0x00", "DROP 1", "MINIMALDATA", "Empty vector minimally represented by OP_0"],
["0x01 0x81", "DROP 1", "MINIMALDATA", "-1 minimally represented by OP_1NEGATE"],
["0x01 0x01", "DROP 1", "MINIMALDATA", "1 to 16 minimally represented by OP_1 to OP_16"],
["0x01 0x02", "DROP 1", "MINIMALDATA"],
["0x01 0x03", "DROP 1", "MINIMALDATA"],
["0x01 0x04", "DROP 1", "MINIMALDATA"],
["0x01 0x05", "DROP 1", "MINIMALDATA"],
["0x01 0x06", "DROP 1", "MINIMALDATA"],
["0x01 0x07", "DROP 1", "MINIMALDATA"],
["0x01 0x08", "DROP 1", "MINIMALDATA"],
["0x01 0x09", "DROP 1", "MINIMALDATA"],
["0x01 0x0a", "DROP 1", "MINIMALDATA"],
["0x01 0x0b", "DROP 1", "MINIMALDATA"],
["0x01 0x0c", "DROP 1", "MINIMALDATA"],
["0x01 0x0d", "DROP 1", "MINIMALDATA"],
["0x01 0x0e", "DROP 1", "MINIMALDATA"],
["0x01 0x0f", "DROP 1", "MINIMALDATA"],
["0x01 0x10", "DROP 1", "MINIMALDATA"],

["0x4c 0x48 0x11{72}", "DROP 1", "MINIMALDATA", "PUSHDATA1 of 72 bytes minimally represented by direct push"],
["0x4d 0xFF00 0x11{255}", "DROP 1", "MINIMALDATA", "PUSHDATA2 of 255 bytes minimally represented by PUSHDATA1"],
["0x4e 0x00010000 0x11{256}", "DROP 1", "MINIMALDATA", "PUSHDATA4 of 256 bytes minimally represented by PUSHDATA2"],

["MINIMALDATA enforcement for numeric arguments"],

["0x01 0x00", "NOT DROP 1", "MINIMALDATA", "numequals 0"],
["0x02 0x0000", "NOT DROP 1", "MINIMALDATA", "numequals 0"],
["0x01 0x80", "NOT DROP 1", "MINIMALDATA", "0x80 (negative zero) numequals 0"],
["0x02 0x0080", "NOT DROP 1", "MINIMALDATA", "numequals 0"],
["0x02 0x0500", "NOT DROP 1", "MINIMALDATA", "numequals 5"],
["0x03 0x050000", "NOT DROP 1", "MINIMALDATA", "numequals 5"],
["0x02 0x0580", "NOT DROP 1", "MINIMALDATA", "numequals -5"],
["0x03 0x050080", "NOT DROP 1", "MINIMALDATA", "numequals -5"],
["0x03 0xff7f80", "NOT DROP 1", "MINIMALDATA", "Minimal encoding is 0xffff"],
["0x03 0xff7f00", "NOT DROP 1", "MINIMALDATA", "Minimal encoding is 0xff7f"],
["0x04 0xffff7f80", "NOT DROP 1", "MINIMALDATA", "Minimal encoding is 0xffffff"],
["0x04 0xffff7f00", "NOT DROP 1", "MINIMALDATA", "Minimal encoding is 0xffff7f"],

["Test every numeric-accepting opcode for correct handling of the numeric minimal encoding rule"],

["1 0x02 0x0000", "PICK DROP", "MINIMALDATA"],
["1 0x02 0x0000", "ROLL DROP 1", "MINIMALDATA"],
["0x02 0x0000", "1ADD DROP 1", "MINIMALDATA"],
["0x02 0x0000", "1SUB DROP 1", "MINIMALDATA"],
["0x02 0x0000", "NEGATE DROP 1", "MINIMALDATA"],
["0x02 0x0000", "ABS DROP 1", "MINIMALDATA"],
["0x02 0x0000", "NOT DROP 1", "MINIMALDATA"],
["0x02 0x0000", "0NOTEQUAL DROP 1", "MINIMALDATA"],

["0 0x02 0x0000", "ADD DROP 1", "MINIMALDATA"],
["0x02 0x0000 0", "ADD DROP 1", "MINIMALDATA"],
["0 0x02 0x0000", "SUB DROP 1", "MINIMALDATA"],
["0x02 0x0000 0", "SUB DROP 1", "MINIMALDATA"],
["0 0x02 0x0000", "BOOLAND DROP 1", "MINIMALDATA"],
["0x02 0x0000 0", "BOOLAND DROP 1", "MINIMALDATA"],
["0 0x02 0x0000", "BOOLOR DROP 1", "MINIMALDATA"],
["0x02 0x0000 0", "BOOLOR DROP 1", "MINIMALDATA"],
["0 0x02 0x0000", "NUMEQUAL DROP 1", "MINIMALDATA"],
["0x02 0x0000 1", "NUMEQUAL DROP 1", "MINIMALDATA"],
["0 0x02 0x0000", "NUMEQUALVERIFY 1", "MINIMALDATA"],
["0x02 0x0000 0", "NUMEQUALVERIFY 1", "MINIMALDATA"],
["0 0x02 0x0000", "NUMNOTEQUAL DROP 1", "MINIMALDATA"],
["0x02 0x0000 0", "NUMNOTEQUAL DROP 1", "MINIMALDATA"],
["0 0x02 0x0000", "LESSTHAN DROP 1", "MINIMALDATA"],
["0x02 0x0000 0", "LESSTHAN DROP 1", "MINIMALDATA"],
["0 0x02 0x0000", "GREATERTHAN DROP 1", "MINIMALDATA"],
["0x02 0x0000 0", "GREATERTHAN DROP 1", "MINIMALDATA"],
["0 0x02 0x0000", "LESSTHANOREQUAL DROP 1", "MINIMALDATA"],
["0x02 0x0000 0", "LESSTHANOREQUAL DROP 1", "MINIMALDATA"],
["0 0x02 0x0000", "GREATERTHANOREQUAL DROP 1", "MINIMALDATA"],
["0x02 0x0000 0", "GREATERTHANOREQUAL DROP 1", "MINIMALDATA"],
["0 0x02 0x0000", "MIN DROP 1", "MINIMALDATA"],
["0x02 0x0000 0", "MIN DROP 1", "MINIMALDATA"],
["0 0x02 0x0000", "MAX DROP 1", "MINIMALDATA"],
["0x02 0x0000 0", "MAX DROP 1", "MINIMALDATA"],

["0x02 0x0000 0 0", "WITHIN DROP 1", "MINIMALDATA"],
["0 0x02 0x0000 0", "WITHIN DROP 1", "MINIMALDATA"],
["0 0 0x02 0x0000", "WITHIN DROP 1", "MINIMALDATA"],

["0 0x02 0x0000", "CHECKMULTISIG DROP 1", "MINIMALDATA"],
["0x02 0x0000 0", "CHECKMULTISIG DROP 1", "MINIMALDATA"],
["0x02 0x0000 0 1", "CHECKMULTISIG DROP 1", "MINIMALDATA"],
["0 0x02 0x0000", "CHECKMULTISIGVERIFY 1", "MINIMALDATA"],
["0x02 0x0000 0", "CHECKMULTISIGVERIFY 1", "MINIMALDATA"],

["Test coverage for CHECKSIG"],
["NOTE: See script_valid.json for details regarding the keys used in these tests"],
["", "CHECKSIG NOT", "", "CHECKSIG must error when there are no stack items"],
["0", "CHECKSIG NOT", "", "CHECKSIG must error when there are not 2 stack items"],
["''", "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG IF TRUE ENDIF", "", "CHECKSIG must evaluate 0-length signatures to false"],
[
    "0x47 0x30440220464daa7c0365f10e019d4ac3560f7c5fb24834209d9a0eed757d9b2f61b09e0302203754bd0645c97e04a364bba06e4ec457ac25c578514eb9b37be492582a0ae36f05",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "",
    "CHECKSIG must error with undefined hash types even when the signature is otherwise valid"
],
[
    "0x48 0x3045022100de883a452b1b810fd74fd432ce8d551e51278223a6920dc304ba02aacbfc3728022065d2a9eb421ef9f3aced11cf5a85038ba619efb0cd23b66dee2645b94e05b2f205",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG NOT",
    "",
    "CHECKSIG must error with undefined hash types when the signature is invalid (valid sig 8th byte ^= 0x55)"
],
[
    "0x48 0x304402204de4b86166781ffbd4375650776a338d53a0eabcc61f371ce256364f058f88ba0220597090d34c536b727fb555d61b100703a3f63b7a6ad7aa0164138c6ab3c63f880101",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error on multi-byte hash type with DERSIG"
],
[
    "1",
    "0x21 0x03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error on non-DER-compliant sig with DERSIG"
],
[
    "1",
    "0x21 0x03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556 CHECKSIG NOT",
    "DERSIG",
    "CHECKSIG must error on non-DER-compliant sig with DERSIG (P2PK NOT)"
],
[
    "0x08 0x3005020100020001",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG NOT",
    "DERSIG",
    "CHECKSIG must error with too short signature with DERSIG"
],
[
    "0x4a 0x3045022100f5353150d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef074022030e09575e7a1541aa018876a4003cefe1b061a90556b5140c63e0ef848135248010101",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error with too long signature with DERSIG"
],
[
    "0x48 0x3145022100f5353150d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef074022030e09575e7a1541aa018876a4003cefe1b061a90556b5140c63e0ef84813524801",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error when first byte of signature is not the ASN.1 sequence ID with DERSIG"
],
[
    "0x48 0x3044022100f5353150d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef074022030e09575e7a1541aa018876a4003cefe1b061a90556b5140c63e0ef84813524801",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error when data len inside signature does not match the remaining len (one too small) with DERSIG"
],
[
    "0x48 0x3046022100f5353150d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef074022030e09575e7a1541aa018876a4003cefe1b061a90556b5140c63e0ef84813524801",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error when data len inside signature does not match the remaining len (one too big) with DERSIG"
],
[
    "0x26 0x3023022100f5353150d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef07401",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error when S ASN.1 integer ID is missing with DERSIG"
],
[
    "0x27 0x3024022100f5353150d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef0740201",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error when S length is missing with DERSIG"
],
[
    "0x48 0x3045022100f5353150d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef074021f30e09575e7a1541aa018876a4003cefe1b061a90556b5140c63e0ef84813524801",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error when S length is invalid (one too small) with DERSIG"
],
[
    "0x48 0x3045022100f5353150d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef074022130e09575e7a1541aa018876a4003cefe1b061a90556b5140c63e0ef84813524801",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error when S length is invalid (one too big) with DERSIG"
],
[
    "0x48 0x3045032100f5353150d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef074022030e09575e7a1541aa018876a4003cefe1b061a90556b5140c63e0ef84813524801",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error when R is not marked as ASN.1 integer with DERSIG"
],
[
    "0x27 0x30240200022030e09575e7a1541aa018876a4003cefe1b061a90556b5140c63e0ef84813524801",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error when R has length zero with DERSIG"
],
[
    "0x47 0x30440220b2ec8d34d473c3aa2ab5eb7cc4a0783977e5db8c8daf777e0b6d7bfa6b6623f302207df6f09af2c40460da2c2c5778f636d3b2e27e20d10d90f5a5afb4523145470001",
    "0x21 0x03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error when R is negative (too little padding) with DERSIG"
],
[
    "0x47 0x30440220b20cd6f4b8496af01fe3e35b86139947ddb2f8a54cc1139d1839e2120de9fe540220261bd8ad7c1ab57912d5f432431001c26b72adc9cd7fde73c7776f7585c8538d01",
    "0x21 0x03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556 CHECKSIG NOT",
    "DERSIG",
    "CHECKSIG must error when R is negative (too little padding) with DERSIG (P2PK NOT)"
],
[
    "0x47 0x304402200077f6e93de5ed43cf1dfddaa79fca4b766e1a8fc879b0333d377f62538d7eb5022054fed940d227ed06d6ef08f320976503848ed1f52d0dd6d17f80c9c160b01d8601",
    "0x21 0x03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error with otherwise valid sig when R has too much padding with DERSIG"
],
[
    "0x47 0x304402200077f6e93de5ed43cf1dfddaa79fca4b766e1a8fc879b0333d377f62538d7eb5022054fed940d227ed06d6ef08f320976503848ed1f52d0dd6d17f80c9c160b01d8601",
    "0x21 0x03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556 CHECKSIG NOT",
    "DERSIG",
    "CHECKSIG must error with invalid sig when R has too much padding (P2PK NOT) with DERSIG (sig invalidated via 8th byte ^= 0x55)"
],
[
    "0x48 0x3045022100f5353150d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef074032030e09575e7a1541aa018876a4003cefe1b061a90556b5140c63e0ef84813524801",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error when S is not marked as ASN.1 integer with DERSIG"
],
[
    "0x28 0x3025022100f5353150d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef074020001",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error when S has length zero with DERSIG"
],
[
    "0x47 0x304402204fc10344934662ca0a93a84d14d650d8a21cf2ab91f608e8783d2999c955443202208441aacd6b17038ff3f6700b042934f9a6fea0cec2051b51dc709e52a5bb7d6101",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error when S is negative (too little padding) with DERSIG"
],
[
    "0x47 0x304402206ad2fdaf8caba0f2cb2484e61b81ced77474b4c2aa069c852df1351b3314fe20022000695ad175b09a4a41cd9433f6b2e8e83253d6a7402096ba313a7be1f086dde501",
    "0x21 0x03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error with otherwise valid sig when S has too much padding with DERSIG"
],
[
    "0x47 0x3044022079c8f3b4a84d0df95faa3459ed65e0094dc842521706ec9a2253a32c43c41feb02200036479eca243e68e312586061c803ddd8d2ce564ab395aa061938cf6e4d011401",
    "0x21 0x03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556 CHECKSIG NOT",
    "DERSIG",
    "CHECKSIG must error with otherwise valid sig when S has too much padding with DERSIG (P2PK NOT)"
],
[
    "0x48 0x304502204fc10344934662ca0a93a84d14d650d8a21cf2ab91f608e8783d2999c95544320221008441aacd6b17038ff3f6700b042934f9a6fea0cec2051b51dc709e52a5bb7d6101",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "DERSIG",
    "CHECKSIG must error when S is greater than the curve half order even though it is otherwise valid with DERSIG"
],
[
    "0x48 0x3045022100f5353150d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef074022030e09575e7a1541aa018876a4003cefe1b061a90556b5140c63e0ef84813524801",
    "0x20 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f817 CHECKSIG",
    "",
    "CHECKSIG must error with compressed pubkeys that are not exactly 33 bytes (one too small)"
],
[
    "0x48 0x3045022100f5353150d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef074022030e09575e7a1541aa018876a4003cefe1b061a90556b5140c63e0ef84813524801",
    "0x22 0x020079be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "",
    "CHECKSIG must error with compressed pubkeys that are not exactly 33 bytes (one too big)"
],
[
    "0x48 0x3045022100f5353150d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef074022030e09575e7a1541aa018876a4003cefe1b061a90556b5140c63e0ef84813524801",
    "0x21 0x0579be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "",
    "CHECKSIG must error with compressed pubkeys that do not start with 0x02 or 0x03 (modified to use hybrid indicator)"
],
[
    "0x47 0x304402206f02f07d84e9bef57e3c211887902f0e3d2067e210678e7637927a3397e38ecc0220795a47bcc1585e8b329a5172fb412c51368dd4d273e8e0766e918590a3141bfe01",
    "0x40 0x0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4 CHECKSIG",
    "",
    "CHECKSIG must error with uncompressed pubkeys that are not exactly 65 bytes (one too small)"
],
[
    "0x47 0x304402206f02f07d84e9bef57e3c211887902f0e3d2067e210678e7637927a3397e38ecc0220795a47bcc1585e8b329a5172fb412c51368dd4d273e8e0766e918590a3141bfe01",
    "0x42 0x040079be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 CHECKSIG",
    "",
    "CHECKSIG must error with uncompressed pubkeys that are not exactly 65 bytes (one too big)"
],
[
    "0x47 0x304402206f02f07d84e9bef57e3c211887902f0e3d2067e210678e7637927a3397e38ecc0220795a47bcc1585e8b329a5172fb412c51368dd4d273e8e0766e918590a3141bfe01",
    "0x41 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 CHECKSIG",
    "",
    "CHECKSIG must error with uncompressed pubkeys that do not start with 0x04 (modified to use compressed indicator)"
],
[
    "0x48 0x304502210082c0c99f2fdaca6afc9f403fb8ecf15af5defc3ae1d50d36fe1f47678d12df5b02202b28b45438bf7d3e58bf7e3f59e76edbeb36cb3e25831f457134089aff0eae8e01",
    "0x41 0x0579be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 CHECKSIG",
    "",
    "CHECKSIG must error with hybrid pubkeys despite being valid"
],
[
    "0x47 0x304402204e804dee7cae7807599b6f46e9df993e9cb0958697d9621bc4ce8b9570e271300220039ffd97cb62963c92bafcd91b9259693f2ad021b74db6b9f62214d9f0712bdf01",
    "0x41 0x0579be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 CHECKSIG NOT",
    "",
    "CHECKSIG must error with hybrid pubkeys despite valid key and sig (P2PK NOT)"
],
[
    "0x48 0x3045022100ba78f285d6d2c774b1c74da4d42859eb737eb157d128011ce73b9ba265760039022074b6aaf5be4cb6d6a1a6db2716ffabffa139345457261e1d8176061d6216794d01",
    "0x41 0x0579be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 CHECKSIG NOT",
    "",
    "CHECKSIG must error with hybrid pubkeys with invalid sigs (sig invalidated via 8th byte ^= 0x55)"
],
[
    "0x47 0x304402200e1bf09e5bd4493bcac49225fe0858fe820ac23f3f81a9ebcf89c562c21ba60202200e3e8ce3dafdbc661fc16e34c2b8ed87f46c2600eed06fafafc6c5e6acce4abb01",
    "0x41 0x0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 CHECKSIG",
    "",
    "CHECKSIG must evaluate valid sigs for other hash types to false (anyonecanpay sig marked with all hash type)"
],
[
    "0x48 0x3045022100f5356450d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef074022030e09575e7a1541aa018876a4003cefe1b061a90556b5140c63e0ef84813524801",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "",
    "CHECKSIG must evaluate invalid sigs to false (compressed P2PK with sig invalidated via 8th byte ^= 0x55)"
],
[
    "0x47 0x304402202dba5e3f3653b0e6117e1e96abd8c0ab026963d4ba57505b876ee8f728c43d9d02204cf1113ea5bd191addaff587809ac7bca1bf0a4e12e9a18a81c69ffbf23ce1fc01 0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 0x19 0x76a914e280cb6e66b96679aec288b1fbdbd4db08077a1b88ac",
    "HASH160 0x14 0x6c3d84ad3f335eb67d9b66245b6b45cb8154bc5a EQUAL",
    "P2SH",
    "CHECKSIG must evaluate invalid sigs to false (compressed p2pkh inside p2sh with sig invalidated via 8th byte ^= 0x55)"
],
[
    "0",
    "0x21 0x03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556 CHECKSIG",
    "",
    "CHECKSIG must evaluate 0 sig to false without DERSIG"
],
[
    "0",
    "0x21 0x03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556 CHECKSIG",
    "DERSIG",
    "CHECKSIG must consider 0 sig value and evaluate to false with DERSIG"
],
[
    "1",
    "0x21 0x03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556 CHECKSIG",
    "",
    "CHECKSIG must evaluate non-DER-compliant sig to false without DERSIG"
],

["Additional test coverage with standard payment forms involving CHECKSIG"],
[
    "0x48 0x3045022100e67ff2e958d066294263617782bedca9eddf1a88e15711caa8a0dd5db5317cfb0220490ca23dced8b91476492ef7e510847f2dd9e67c8f4a7f24ad2bc0e6e574b70201 0x21 0x0279be662bf9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
    "DUP HASH160 0x14 0xe280cb6e66b96679aec288b1fbdbd4db08077a1b EQUALVERIFY CHECKSIG",
    "",
    "EQUALVERIFY must error due to mismatched hash from corrupted compressed P2PKH (pubkey invalidated via 5th byte ^= 0x55)"
],
[
    "0x47 0x304402205550606a87650619f98b261adde6d343aad0c3fdd526c68d5ed718819ee59a7e0220335af6a47a18064681a77f8387c95934439bdf74b61e290a3353528311b8c99301 0x23 0x210279be337ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798ac",
    "HASH160 0x14 0xe57d091fa806258280dc78a1d8544a47a5b16a19 EQUAL",
    "P2SH",
    "P2SH execution must push false due to mistmatched hash from corrupted compressed P2PK redeem script (redeem script invalidated via 5th byte ^= 0x55)"
],
[
    "0x48 0x3045022100f5353150d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef074022030e09575e7a1541aa018876a4003cefe1b061a90556b5140c63e0ef84813524801 NOP",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "SIGPUSHONLY",
    "Execution must error when signature script contains non-push-only opcodes with SIGPUSHONLY"
],
[
    "0x47 0x304402205550606a87650619f98b261adde6d343aad0c3fdd526c68d5ed718819ee59a7e0220335af6a47a18064681a77f8387c95934439bdf74b61e290a3353528311b8c99301 NOP 0x23 0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "HASH160 0x14 0xe57d091fa806258280dc78a1d8544a47a5b16a19 EQUAL",
    "P2SH",
    "Execution must error when signature script contains non-push-only opcodes with P2SH and without SIGPUSHONLY (executed redeem script)"
],
[
    "0x47 0x304402205550606a87650619f98b261adde6d343aad0c3fdd526c68d5ed718819ee59a7e0220335af6a47a18064681a77f8387c95934439bdf74b61e290a3353528311b8c99301 NOP 0x23 0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "HASH160 0x14 0xe57d091fa806258280dc78a1d8544a47a5b16a19 EQUAL",
    "SIGPUSHONLY",
    "Execution must error when signature script contains non-push-only opcodes without P2SH and with SIGPUSHONLY (unexecuted redeem script)"
],
[
    "11 0x48 0x3045022100f5353150d31a63f4a0d06d1f5a01ac65f7267a719e49f2a1ac584fd546bef074022030e09575e7a1541aa018876a4003cefe1b061a90556b5140c63e0ef84813524801",
    "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "CLEANSTACK,P2SH",
    "Execution must error when the script finishes with data on the stack with CLEANSTACK"
],
[
    "11 0x47 0x304402205550606a87650619f98b261adde6d343aad0c3fdd526c68d5ed718819ee59a7e0220335af6a47a18064681a77f8387c95934439bdf74b61e290a3353528311b8c99301 0x23 0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 CHECKSIG",
    "HASH160 0x14 0xe57d091fa806258280dc78a1d8544a47a5b16a19 EQUAL",
    "CLEANSTACK,P2SH",
    "P2SH execution must error when the script finishes with data on the stack with CLEANSTACK"
],

["Test coverage for CHECKMULTISIG"],
["NOTE: See script_valid.json for details regarding the keys used in these tests"],
["", "CHECKMULTISIG NOT", "", "CHECKMULTISIG must error when there are no stack items"],
["", "-1 CHECKMULTISIG NOT", "", "CHECKMULTISIG must error when the specified number of pubkeys is negative"],
["", "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 2 CHECKMULTISIG NOT", "", "CHECKMULTISIG must error when there are not enough pubkeys on the stack"],
["", "<0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798>{21} 21 CHECKMULTISIG 1", "", "CHECKMULTISIG must error with more than 20 pubkeys"],
["", "0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 1 CHECKMULTISIG NOT", "", "CHECKMULTISIG must error when the required num signatures stack item is not on the stack"],
["", "-1 0 CHECKMULTISIG NOT", "", "CHECKMULTISIG must error when the specified number of signatures is negative"],
[
    "0x46 0x3043022053588bba590227c76367d8b0dda23d06c4438aae228931c8966ad49dc870e889021f7be968f70db1543c50781ccee983eb447c8712662ec993876da4bebb1784e901",
    "1 0 CHECKMULTISIG 1",
    "",
    "CHECKMULTISIG must error with more signatures than pubkeys"
],
["", "1 0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 1 CHECKMULTISIG NOT", "", "CHECKMULTISIG must error when there are not enough signatures on the stack"],
["", "<NOP>{4} <0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIG>{12}", "", "CHECKMULTISIG must error if ops would exceed 255 limit"],
["1", "<NOP>{4} <0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIGVERIFY>{12}", "", "CHECKMULTISIGVERIFY must error if ops would exceed 255 limit"],
[
    "0x48 0x304502210085b4d8c2f551d2393bbb096f18f50516a1910f25cdcd06e1d2164514c2537e830220212144571d671d885097eff4dae6bf2ae1f0a67481f0d07e73994eaea8162bf105",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "",
    "CHECKMULTISIG must error with undefined hash types even when the signature is otherwise valid"
],
[
    "0x48 0x304502210085b48dc2f551d2393bbb096f18f50516a1910f25cdcd06e1d2164514c2537e830220212144571d671d885097eff4dae6bf2ae1f0a67481f0d07e73994eaea8162bf105",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "",
    "CHECKMULTISIG must error with undefined hash types when the signature is invalid (valid sig 8th byte ^= 0x55)"
],
[
    "0x49 0x3045022100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a02207eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d0101",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error on multi-byte hash type with DERSIG"
],
[
    "0x08 0x3005020100020001",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error with too short signature with DERSIG"
],
[
    "0x4a 0x3045022100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a02207eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d010101",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error with too long signature with DERSIG"
],
[
    "0x48 0x3145022100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a02207eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d01",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when first byte of signature is not the ASN.1 sequence ID with DERSIG"
],
[
    "0x48 0x3044022100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a02207eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d01",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when data len inside signature does not match the remaining len (one too small) with DERSIG"
],
[
    "0x48 0x3046022100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a02207eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d01",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when data len inside signature does not match the remaining len (one too big) with DERSIG"
],
[
    "0x26 0x3023022100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a01",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when S ASN.1 integer ID is missing with DERSIG"
],
[
    "0x27 0x3024022100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a0201",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when S length is missing with DERSIG"
],
[
    "0x48 0x3045022100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a021f7eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d01",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when S length is invalid (one too small) with DERSIG"
],
[
    "0x48 0x3045022100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a02217eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d01",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when S length is invalid (one too big) with DERSIG"
],
[
    "0x48 0x3045032100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a02207eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d01",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when R is not marked as ASN.1 integer with DERSIG"
],
[
    "0x27 0x3024020002207eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d01",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when R has length zero with DERSIG"
],
[
    "0x47 0x30440220a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a02207eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d01",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when R is negative (too little padding) with DERSIG"
],
[
    "0x47 0x30440220eb8231fbc543176e5ee8b80591b7db91d4dab835daada515d95f3532eb54b86102203e76890b026b24030a99a2ae5957d573b7a9ecbc382d613b18c25c124d0fac9a01 0x48 0x3045022100b6d7a4f10cd430b1292b761e2cf3ef1284dc4b8276a6d4895d955016f06f1bb702205d8f79c45719eae0985ce7602ddf4ec2427de5c353f4e642f9e4855d159f6a7801",
    "2 0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 2 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when R is negative with DERSIG (2-of-2, first sig valid DER, second sig valid non-DER)"
],
[
    "0x47 0x3044022058e3e5d0c457d3b41d7b555366410fb233e00f504812e87602cd5f9174cbe2fc02201805a21251d62eae7ce92ba4235bd553a38ac0e0ffe9bac0f2fa9ccfc6abdcdc01 0x47 0x30440220a1bf7167ce8c49568537045e70f689b90f42a496d75947f14e6dbfdbfa6b0fc602200564205c85c3003f5e3442eeb4632c4fc5928838727324ae3b11f8de3579981501",
    "2 0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 2 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when R is negative with DERSIG (2-of-2, first sig valid non-DER, second sig valid DER)"
],
[
    "0 0x47 0x30440220ea377dcb8630e68da3a0eeb57e96e195b4d9c437381f76912c0e6fc28bae6e3502204096da36de10b7261bfa6ae0fddbe11428c1d13160bcb1110ed04f3f7d2f389f01",
    "2 0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 2 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when R is negative with DERSIG (2-of-2, first sig valid non-DER, second sig invalid but DER compliant)"
],
[
    "0x47 0x30440220b35d1861ac81cd15748dbf82a67931057600f5596cde464621f8a8afeea84862022076aea5e870ed4d82955b1c803de191fc4c82c8b6c6e243d3e17295506f276e7301 0",
    "2 0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 2 CHECKMULTISIG",
    "DERSIG",
    "CHECKMULTISIG must push false even if an unevaluated signature is not DER compliant with DERSIG (2-of-2, first sig invalid but DER compliant, second sig valid non-DER)"
],
[
    "0x49 0x304602220000a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a02207eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d01",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error with otherwise valid sig when R has too much padding with DERSIG"
],
[
    "0x49 0x304602220000a1756e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a02207eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d01",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error with invalid sig when R has too much padding with DERSIG (sig invalidated via 8th byte ^= 0x55)"
],
[
    "0x48 0x3045022100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a03207eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d01",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when S is not marked as ASN.1 integer with DERSIG"
],
[
    "0x28 0x3025022100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a020001",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when S has length zero with DERSIG"
],
[
    "0x48 0x3045022100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a0220feb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d01",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when S is negative (too little padding) with DERSIG"
],
[
    "0x49 0x3046022100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a0221007eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d01",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error with otherwise valid sig when S has too much padding with DERSIG"
],
[
    "0x48 0x30450220432c00086747ac31b5fca8ba1cc987eb8eb0f52315ce9fc03bc383780377c3aa022100adc9314c1b1551133e9ae1ec837e2e3820263a1f0a9553c885d39e3003d9300d01",
    "1 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error when S is greater than the curve half order even though it is otherwise valid with DERSIG"
],
[
    "0x48 0x3045022100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a02207eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d01",
    "1 0x20 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error with compressed pubkeys that are not exactly 33 bytes (one too small)"
],
[
    "0x48 0x3045022100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a02207eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d01",
    "1 0x22 0x0200f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error with compressed pubkeys that are not exactly 33 bytes (one too big)"
],
[
    "0x48 0x3045022100a1206e43320cc02d97c76eb2d575cdb1215b491c5b0c7a7865d3a4bea2a7a39a02207eb5a56828d164f158812e0ad8d39588258ae0e369cb918bfaab6d61ba90d80d01",
    "1 0x21 0x0579be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error with compressed pubkeys that do not start with 0x02 or 0x03 (modified to use hybrid indicator)"
],
[
    "0x47 0x3044022001f819d40db86ba57450d99dc1ed009e1a55f633a78ef6ff4ca955961cef3f530220770013aee8e7f47c1c1b8a9fe90f9f6e5e59fbecd5ed4f37a99dfd112ad4e07901",
    "1 0x40 0x0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error with uncompressed pubkeys that are not exactly 65 bytes (one too small)"
],
[
    "0x47 0x3044022001f819d40db86ba57450d99dc1ed009e1a55f633a78ef6ff4ca955961cef3f530220770013aee8e7f47c1c1b8a9fe90f9f6e5e59fbecd5ed4f37a99dfd112ad4e07901",
    "1 0x42 0x040079be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error with compressed pubkeys that are not exactly 33 bytes (one too big)"
],
[
    "0x47 0x3044022001f819d40db86ba57450d99dc1ed009e1a55f633a78ef6ff4ca955961cef3f530220770013aee8e7f47c1c1b8a9fe90f9f6e5e59fbecd5ed4f37a99dfd112ad4e07901",
    "1 0x41 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error with uncompressed pubkeys that do not start with 0x04 (modified to use compressed indicator)"
],
[
    "0x47 0x3044022001f819d40db86ba57450d99dc1ed009e1a55f633a78ef6ff4ca955961cef3f530220770013aee8e7f47c1c1b8a9fe90f9f6e5e59fbecd5ed4f37a99dfd112ad4e07901",
    "1 0x41 0x0579be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error with hybrid pubkeys despite being valid"
],
[
    "0x47 0x3044022001f819810db86ba57450d99dc1ed009e1a55f633a78ef6ff4ca955961cef3f530220770013aee8e7f47c1c1b8a9fe90f9f6e5e59fbecd5ed4f37a99dfd112ad4e07901",
    "1 0x41 0x0579be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 1 CHECKMULTISIG NOT",
    "DERSIG",
    "CHECKMULTISIG must error with hybrid pubkeys with invalid sigs (sig invalidated via 8th byte ^= 0x55)"
],
[
    "0x47 0x304402202809a0c2d54517cb3cd7d3068e5114a9cfcf4790b6a73e0e14468116582b674c022009b0a6bed0c0a8d28761b7642a841868e194a72a6bad0587b473a9ca9fd53f8f01",
    "1 0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 0x41 0x05f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672 2 CHECKMULTISIG",
    "",
    "CHECKMULTISIG must error when encountering hybrid pubkeys even if there are enough other valid sigs (1-of-2, first pubkey hybrid)"
],
[
    "0x48 0x3045022100a12e942a32c449814862a6fa80a9c2a5668cd598b3e16615bb9fdcb90489b408022058c53de4979498219cabbdac166789ff6cc8402a271ec332b74deae4fd304a3101",
    "1 0x41 0x0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 1 CHECKMULTISIG",
    "DERSIG",
    "CHECKSIG must push false for valid sigs for other hash types (anyonecanpay sig marked with all hash type)"
],
[
    "0x47 0x304402203f419012d8e26a336579b8a1410c6a2bb460965d093beee381851998e946013b02205281ee195559c758fb3a3abb9d38ad32ed83d53e319793fb7e5fab31ac48ec0c01 0x47 0x304402206c5bb54f2a8681d4ebbd762042addc2837d2a0e3dc3e600a09c1901512643e8b022072f3acdcce1f2adde1fddfc642e2403f84f040e7dbb0d4249a9b837f98ad259101 0",
    "3 0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 0x21 0x03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556 3 CHECKMULTISIG",
    "",
    "CHECKMULTISIG must push false if not all required signatures are valid (3-of-3, 2 valid sigs)"
],
[
    "0x47 0x3044022015dd38cbf89c82f64393ffed0dc2a388a791086950d82fd201e5a8395fc79a2e0220379c89ff963bd904614e5e2b12acbdd14b927f35232bf53b1d598e45a4ed922c01 0 0x4c69 2 0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 0x21 0x02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9 0x21 0x03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556 3 CHECKMULTISIG",
    "HASH160 0x14 0xf86b5a7c6d32566aa4dccc04d1533530b4d64cf3 EQUAL",
    "P2SH",
    "CHECKMULTISIG must push false if not all required signatures are valid (P2SH(2-of-3), 1 valid sig)"
],

["Additional test coverage with standard payment forms involving CHECKMULTISIG"],
[
    "0x48 0x3045022100c40b401e745675a9280ef213d6bfc453bd941d61004e30acdcc2704c5098bcbb02206d2f2549311cf537b67a46840044124f2068759d3ba0ac4f1d377ded06d3532101 DUP",
    "2 0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 DUP 2 CHECKMULTISIG",
    "SIGPUSHONLY",
    "Execution must error when signature script contains non-push-only opcodes with SIGPUSHONLY (2-of-2, identical keys and sigs pushed via DUP)"
],

["Order of CHECKMULTISIG evaluation tests, inverted by swapping the order of"],
["pubkeys/signatures so they fail due to the strict encoding rules on validly"],
["encoded signatures and pubkeys."],
[
    "0x47 0x3044022044dc17b0887c161bb67ba9635bf758735bdde503e4b0a0987f587f14a4e1143d022009a215772d49a85dae40d8ca03955af26ad3978a0ff965faa12915e9586249a501 0x47 0x3044022044dc17b0887c161bb67ba9635bf758735bdde503e4b0a0987f587f14a4e1143d022009a215772d49a85dae40d8ca03955af26ad3978a0ff965faa12915e9586249a501",
    "2 0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a56d253e69256dac0 0 2 CHECKMULTISIG NOT",
    "DERSIG",
    "2-of-2 CHECKMULTISIG NOT with the first pubkey invalid, and both signatures validly encoded"
],
[
    "0x47 0x3044022044dc17b0887c161bb67ba9635bf758735bdde503e4b0a0987f587f14a4e1143d022009a215772d49a85dae40d8ca03955af26ad3978a0ff965faa12915e9586249a501 1",
    "2 0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a56d253e69256dac0 0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a56d253e69256dac0 2 CHECKMULTISIG NOT",
    "DERSIG",
    "2-of-2 CHECKMULTISIG NOT with both pubkeys valid, but first signature invalid"
],

["The End"]
]
